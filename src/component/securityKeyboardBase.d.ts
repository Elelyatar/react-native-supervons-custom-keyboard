export default SecurityKeyboard;
declare class SecurityKeyboard {
    static propTypes: {
        key: any;
        keyboardHeader: any;
        value: any;
        placeholder: any;
        placeholderTextColor: any;
        disabled: any;
        caretHidden: any;
        secureTextEntry: any;
        style: any;
        valueStyle: any;
        cursorStyle: any;
        secureTextStyle: any;
        regs: any;
        onChangeText: any;
        onFocus: any;
        onBlur: any;
    };
    constructor(props: any);
    modalVisible: boolean;
    upCase: any;
    state: {
        caretHidden: boolean;
        secureTextEntry: boolean;
        keyboardType: any;
        valueArr: any;
        currentArr: any[];
        cursorLock: boolean;
    };
    numArr: number[];
    symbolArr: string[];
    stringArr: string[];
    stringArrUp: string[];
    componentDidMount(): void;
    keyboardDidShowListener: any;
    keyboardDidHideListener: any;
    _keyboardDidShow: () => void;
    systemKeyboard: boolean;
    _keyboardDidHide: () => void;
    componentWillUnmount(): void;
    changeKey(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    show(): void;
    hide(): void;
    inputEvent(value: any): boolean;
    onFocus(): void;
    onBlur(): void;
    regs(valueArr: any): any;
    add(value: any): void;
    remove(): void;
    removeAll(): void;
    shuffle(a: any): any;
    addItemImageView(index: any, itemParent: any, sty: any, path: any, fun: any, funlong: any): any;
    addItemTextView(index: any, parentSty: any, sty: any, content: any, fun: any): any;
    setChangeDateNum(): void;
    setChangeDateString(stringArr: any, isUp: any): void;
    setChangeDateSymbol(): void;
    renderNum(): any;
    addOrientationView(numArr: any, addNum: any, verticalView: any): any;
    _addNumView: (flag: any, addNum: any, numArr: any) => any;
    _addStringView: (flag: any, addNum: any, numArr: any) => any;
    _addStringSymbol: (flag: any, addNum: any, numArr: any) => any;
    render(): any;
}
